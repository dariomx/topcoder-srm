[2] Implement a set-like data structure that supports Insert, Remove, and
GetRandomElement efficiently. Example: If you insert the elements 1, 3, 6, 8
and remove 6, the structure should contain [1, 3, 8]. Now, GetRandom should return
one of 1, 3 or 8 with equal probability.

This was a very interesting question, that forced me to review several data
structures aiming to find a proper tool for the job. Below the history of my
attempts, culminating in the proposal for using indexed skip lists:

